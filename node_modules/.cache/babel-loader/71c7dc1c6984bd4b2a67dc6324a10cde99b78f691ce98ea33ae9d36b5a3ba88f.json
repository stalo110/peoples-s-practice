{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */import{createUserWithEmailAndPassword,sendEmailVerification,updateProfile,applyActionCode}from\"firebase/auth\";import{configure,makeAutoObservable,runInAction}from\"mobx\";import{auth}from\"../firebase/firebase\";import{toast}from\"react-toastify\";import axios from\"axios\";import BaseDirectories from\"../base directories/BaseDirectories\";configure({enforceActions:\"always\"});export class AuthStore{constructor(){this.authenticated=false;this.loading=false;this.submitting=false;this.error=\"\";this.success=\"\";this.verified=false;this.token=sessionStorage.getItem(\"accessToken\")||\"\";this.userId=\"\";this.user=auth.currentUser;this.message={type:\"\",msg:\"\"};this.mapAuthCodeToMessage=authCode=>{switch(authCode){case\"auth/invalid-password\":return\"Current password provided is not correct.\";case\"auth/wrong-password\":return\"Current password provided is not correct.\";case\"auth/too-many-requests\":return\"Too many tries, please try again later.\";default:return\"Something went wrong, please try again later.\";}};this.setError=err=>{this.error=err;};this.setSuccess=res=>{this.success=res;};this.setMessage=(type,msg)=>{this.message.type=type;this.message.msg=msg;};this.setSubmitting=val=>{this.submitting=val;};this.setUser=res=>{this.user=res;};this.setLoading=val=>{this.loading=val;};this.SetAccessToken=token=>{this.token=token||sessionStorage.getItem(\"accessToken\");};this.setToLocalStorage=(key,value)=>{window.sessionStorage.setItem(key,JSON.stringify(value));};this.clearFromLocalStorage=()=>{window.sessionStorage.clear();};makeAutoObservable(this,{},{autoBind:true});}isAuthenticated(){return this.authenticated;}isVerified(){return this.isVerified;}async CreateUser(details){this.setLoading(true);this.setSubmitting(true);try{var _auth$currentUser;const res=await createUserWithEmailAndPassword(auth,details.email,details.password);if(res.user){// this.logger.info(`User | Sign Up | ${details.email}`, res);\nupdateProfile(res.user,{displayName:details.firstName+\" \"+details.lastName});}const actionCodeSettings={url:\"\".concat(BaseDirectories.BASE_URL,\"/dashboard/overview/?email=\").concat((_auth$currentUser=auth.currentUser)===null||_auth$currentUser===void 0?void 0:_auth$currentUser.email),handleCodeInApp:true};//create profile in backend\nconst user=auth.currentUser;let token;if(user){token=await user.getIdToken();}if(token){this.SetAccessToken(token);await this.createProfile(details,res===null||res===void 0?void 0:res.user,actionCodeSettings);}this.setSuccess(res);this.setLoading(false);this.setSubmitting(false);runInAction(()=>{this.loading=false;});}catch(error){this.setError(error);this.setLoading(false);this.setSubmitting(false);runInAction(()=>{this.loading=false;});}}async sendVerificationMail(user,actionCodeSettings){await sendEmailVerification(user,actionCodeSettings).then(res=>{// return;\n}).catch(error=>{// return;\n});}async deleteUser(){const user=auth.currentUser;user.delete().then(()=>{return;}).catch(error=>{return;});}async VerifyEmail(actionCode){this.setLoading(true);try{await applyActionCode(auth,actionCode).then(()=>{toast.success(\"Email verified successfully.\");this.setMessage(\"success\",\"Email verified successfully.\");return;}).catch(error=>{toast.error(this.mapAuthCodeToMessage(error.code));this.setMessage(\"error\",this.mapAuthCodeToMessage(error.code));return;});runInAction(()=>{this.loading=false;});}catch(error){this.setError(error);runInAction(()=>{this.loading=false;});}}async createProfile(data,resUser,actionCodeSettings){const headers={accept:\"application/json\",Authorization:\"Bearer \".concat(this.token),\"Content-Type\":\"application/json\"};this.setSubmitting(true);axios.post(\"\".concat(BaseDirectories.API_BASE_URL,\"/users/create-profile\"),data,{headers}).then(async res=>{if(!res.data.error){toast.success(\"Profile created successfully\",{autoClose:2000});await this.sendVerificationMail(resUser,actionCodeSettings);this.setMessage(\"success\",\"Profile created successfully\");this.setToLocalStorage(\"user\",res.data);setTimeout(()=>{this.setMessage(\"\",\"\");},3000);}else{await this.deleteUser();toast.error(\"\".concat(res.data.message));}this.setSubmitting(false);}).catch(async err=>{await this.deleteUser();toast.error(\"\".concat(err.response.data.message,\", \").concat(err.response.data.statusCode));this.setMessage(\"error\",err.response.data.message);setTimeout(()=>{this.setMessage(\"\",\"\");},4000);this.setSubmitting(false);});}setUserNotAuthenticated(){this.authenticated=false;this.token=\"\";this.error=\"Sign up failed\";this.setLoading(false);this.clearFromLocalStorage();}setUserAuthenticated(res){this.authenticated=true;this.token=res.access_token;this.success=\"Sign up successful\";this.setLoading(false);this.setToLocalStorage(\"accessToken\",this.token);this.setToLocalStorage(\"uid\",this.userId);}}","map":{"version":3,"names":["createUserWithEmailAndPassword","sendEmailVerification","updateProfile","applyActionCode","configure","makeAutoObservable","runInAction","auth","toast","axios","BaseDirectories","enforceActions","AuthStore","constructor","authenticated","loading","submitting","error","success","verified","token","sessionStorage","getItem","userId","user","currentUser","message","type","msg","mapAuthCodeToMessage","authCode","setError","err","setSuccess","res","setMessage","setSubmitting","val","setUser","setLoading","SetAccessToken","setToLocalStorage","key","value","window","setItem","JSON","stringify","clearFromLocalStorage","clear","autoBind","isAuthenticated","isVerified","CreateUser","details","_auth$currentUser","email","password","displayName","firstName","lastName","actionCodeSettings","url","concat","BASE_URL","handleCodeInApp","getIdToken","createProfile","sendVerificationMail","then","catch","deleteUser","delete","VerifyEmail","actionCode","code","data","resUser","headers","accept","Authorization","post","API_BASE_URL","autoClose","setTimeout","response","statusCode","setUserNotAuthenticated","setUserAuthenticated","access_token"],"sources":["/Users/mac/Desktop/Peoples Practice/Aeroconvert-frontend/src/mobx stores/AuthStore.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  createUserWithEmailAndPassword,\n  sendEmailVerification,\n  updateProfile,\n  applyActionCode,\n} from \"firebase/auth\";\nimport { configure, makeAutoObservable, runInAction } from \"mobx\";\nimport { auth } from \"../firebase/firebase\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport BaseDirectories from \"../base directories/BaseDirectories\";\n\nconfigure({ enforceActions: \"always\" });\n\nexport class AuthStore {\n  authenticated = false;\n  loading = false;\n  submitting = false;\n  error = \"\";\n  success = \"\";\n  verified = false;\n  token: any = sessionStorage.getItem(\"accessToken\") || \"\";\n  userId = \"\";\n  user: any = auth.currentUser;\n  message = {\n    type: \"\",\n    msg: \"\",\n  };\n\n  constructor() {\n    makeAutoObservable(this, {}, { autoBind: true });\n  }\n\n  isAuthenticated() {\n    return this.authenticated;\n  }\n\n  isVerified() {\n    return this.isVerified;\n  }\n\n  async CreateUser(details: any) {\n    this.setLoading(true);\n    this.setSubmitting(true);\n\n    try {\n      const res: any = await createUserWithEmailAndPassword(\n        auth,\n        details.email,\n        details.password\n      );\n      if (res.user) {\n        // this.logger.info(`User | Sign Up | ${details.email}`, res);\n        updateProfile(res.user, {\n          displayName: details.firstName + \" \" + details.lastName,\n        });\n      }\n      const actionCodeSettings = {\n        url: `${BaseDirectories.BASE_URL}/dashboard/overview/?email=${auth.currentUser?.email}`,\n        handleCodeInApp: true,\n      };\n      //create profile in backend\n      const user: any = auth.currentUser;\n      let token;\n      if (user) {\n        token = await user.getIdToken();\n      }\n\n      if (token) {\n        this.SetAccessToken(token);\n        await this.createProfile(details, res?.user, actionCodeSettings);\n      }\n\n      this.setSuccess(res);\n      this.setLoading(false);\n      this.setSubmitting(false);\n      runInAction(() => {\n        this.loading = false;\n      });\n    } catch (error: any) {\n      this.setError(error);\n      this.setLoading(false);\n      this.setSubmitting(false);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  }\n\n  async sendVerificationMail(user: any, actionCodeSettings: any) {\n    await sendEmailVerification(user, actionCodeSettings)\n      .then((res: any) => {\n        // return;\n      })\n      .catch((error: any) => {\n        // return;\n      });\n  }\n\n  async deleteUser() {\n    const user: any = auth.currentUser;\n    user\n      .delete()\n      .then(() => {\n        return;\n      })\n      .catch((error: any) => {\n        return;\n      });\n  }\n\n  async VerifyEmail(actionCode: any) {\n    this.setLoading(true);\n    try {\n      await applyActionCode(auth, actionCode)\n        .then(() => {\n          toast.success(\"Email verified successfully.\");\n          this.setMessage(\"success\", \"Email verified successfully.\");\n          return;\n        })\n\n        .catch((error) => {\n          toast.error(this.mapAuthCodeToMessage(error.code));\n          this.setMessage(\"error\", this.mapAuthCodeToMessage(error.code));\n          return;\n        });\n\n      runInAction(() => {\n        this.loading = false;\n      });\n    } catch (error: any) {\n      this.setError(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  }\n\n  async createProfile(data: any, resUser: any, actionCodeSettings: any) {\n    const headers = {\n      accept: \"application/json\",\n      Authorization: `Bearer ${this.token}`,\n      \"Content-Type\": \"application/json\",\n    };\n    this.setSubmitting(true);\n    axios\n      .post(`${BaseDirectories.API_BASE_URL}/users/create-profile`, data, {\n        headers,\n      })\n      .then(async (res: any) => {\n        if (!res.data.error) {\n          toast.success(\"Profile created successfully\", { autoClose: 2000 });\n          await this.sendVerificationMail(resUser, actionCodeSettings);\n          this.setMessage(\"success\", \"Profile created successfully\");\n          this.setToLocalStorage(\"user\", res.data);\n          setTimeout(() => {\n            this.setMessage(\"\", \"\");\n          }, 3000);\n        } else {\n          await this.deleteUser();\n          toast.error(`${res.data.message}`);\n        }\n        this.setSubmitting(false);\n      })\n      .catch(async (err) => {\n        await this.deleteUser();\n        toast.error(\n          `${err.response.data.message}, ${err.response.data.statusCode}`\n        );\n        this.setMessage(\"error\", err.response.data.message);\n        setTimeout(() => {\n          this.setMessage(\"\", \"\");\n        }, 4000);\n        this.setSubmitting(false);\n      });\n  }\n\n  mapAuthCodeToMessage = (authCode: string) => {\n    switch (authCode) {\n      case \"auth/invalid-password\":\n        return \"Current password provided is not correct.\";\n\n      case \"auth/wrong-password\":\n        return \"Current password provided is not correct.\";\n\n      case \"auth/too-many-requests\":\n        return \"Too many tries, please try again later.\";\n\n      default:\n        return \"Something went wrong, please try again later.\";\n    }\n  };\n\n  setError = (err: string) => {\n    this.error = err;\n  };\n  setSuccess = (res: string) => {\n    this.success = res;\n  };\n\n  setMessage = (type: string, msg: string) => {\n    this.message.type = type;\n    this.message.msg = msg;\n  };\n\n  setSubmitting = (val: boolean) => {\n    this.submitting = val;\n  };\n\n  setUserNotAuthenticated() {\n    this.authenticated = false;\n    this.token = \"\";\n    this.error = \"Sign up failed\";\n    this.setLoading(false);\n    this.clearFromLocalStorage();\n  }\n\n  setUser = (res: any) => {\n    this.user = res;\n  };\n\n  setLoading = (val: boolean) => {\n    this.loading = val;\n  };\n\n  SetAccessToken = (token: string) => {\n    this.token = token || sessionStorage.getItem(\"accessToken\");\n  };\n\n  setToLocalStorage = (key: string, value: any) => {\n    window.sessionStorage.setItem(key, JSON.stringify(value));\n  };\n\n  clearFromLocalStorage = () => {\n    window.sessionStorage.clear();\n  };\n\n  setUserAuthenticated(res: any) {\n    this.authenticated = true;\n    this.token = res.access_token;\n    this.success = \"Sign up successful\";\n    this.setLoading(false);\n    this.setToLocalStorage(\"accessToken\", this.token);\n    this.setToLocalStorage(\"uid\", this.userId);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}