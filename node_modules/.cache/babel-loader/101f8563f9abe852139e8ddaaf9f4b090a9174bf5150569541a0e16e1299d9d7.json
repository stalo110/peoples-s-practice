{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { createUserWithEmailAndPassword, sendEmailVerification, updateProfile, applyActionCode } from \"firebase/auth\";\nimport { configure, makeAutoObservable, runInAction } from \"mobx\";\nimport { auth } from \"../firebase/firebase\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport BaseDirectories from \"../base directories/BaseDirectories\";\nconfigure({\n  enforceActions: \"always\"\n});\nexport class AuthStore {\n  constructor() {\n    this.authenticated = false;\n    this.loading = false;\n    this.submitting = false;\n    this.error = \"\";\n    this.success = \"\";\n    this.verified = false;\n    this.token = sessionStorage.getItem(\"accessToken\") || \"\";\n    this.userId = \"\";\n    this.user = auth.currentUser;\n    this.message = {\n      type: \"\",\n      msg: \"\"\n    };\n    this.mapAuthCodeToMessage = authCode => {\n      switch (authCode) {\n        case \"auth/invalid-password\":\n          return \"Current password provided is not correct.\";\n        case \"auth/wrong-password\":\n          return \"Current password provided is not correct.\";\n        case \"auth/too-many-requests\":\n          return \"Too many tries, please try again later.\";\n        default:\n          return \"Something went wrong, please try again later.\";\n      }\n    };\n    this.setError = err => {\n      this.error = err;\n    };\n    this.setSuccess = res => {\n      this.success = res;\n    };\n    this.setMessage = (type, msg) => {\n      this.message.type = type;\n      this.message.msg = msg;\n    };\n    this.setSubmitting = val => {\n      this.submitting = val;\n    };\n    this.setUser = res => {\n      this.user = res;\n    };\n    this.setLoading = val => {\n      this.loading = val;\n    };\n    this.SetAccessToken = token => {\n      this.token = token || sessionStorage.getItem(\"accessToken\");\n    };\n    this.setToLocalStorage = (key, value) => {\n      window.sessionStorage.setItem(key, JSON.stringify(value));\n    };\n    this.clearFromLocalStorage = () => {\n      window.sessionStorage.clear();\n    };\n    makeAutoObservable(this, {}, {\n      autoBind: true\n    });\n  }\n  isAuthenticated() {\n    return this.authenticated;\n  }\n  isVerified() {\n    return this.isVerified;\n  }\n  async CreateUser(details) {\n    this.setLoading(true);\n    this.setSubmitting(true);\n    try {\n      var _auth$currentUser;\n      const res = await createUserWithEmailAndPassword(auth, details.email, details.password);\n      if (res.user) {\n        // this.logger.info(`User | Sign Up | ${details.email}`, res);\n        updateProfile(res.user, {\n          displayName: details.firstName + \" \" + details.lastName\n        });\n      }\n      const actionCodeSettings = {\n        url: `${BaseDirectories.BASE_URL}/dashboard/overview/?email=${(_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.email}`,\n        handleCodeInApp: true\n      };\n      //create profile in backend\n      const user = auth.currentUser;\n      const token = await user.getIdToken();\n      if (token) {\n        this.SetAccessToken(token);\n        this.createProfile(details, res.user, actionCodeSettings);\n      }\n      this.setSuccess(res);\n      this.setLoading(false);\n      this.setSubmitting(false);\n      runInAction(() => {\n        this.loading = false;\n      });\n    } catch (error) {\n      this.setError(error);\n      this.setLoading(false);\n      this.setSubmitting(false);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  }\n  async sendVerificationMail(user, actionCodeSettings) {\n    await sendEmailVerification(user, actionCodeSettings).then(res => {\n      return;\n    }).catch(error => {\n      return;\n    });\n  }\n  async deleteUser() {\n    const user = auth.currentUser;\n    user.delete().then(() => {\n      return;\n    }).catch(error => {\n      return;\n    });\n  }\n  async VerifyEmail(actionCode) {\n    this.setLoading(true);\n    try {\n      await applyActionCode(auth, actionCode).then(() => {\n        toast.success(\"Email verified successfully.\");\n        this.setMessage(\"success\", \"Email verified successfully.\");\n        return;\n      }).catch(error => {\n        toast.error(this.mapAuthCodeToMessage(error.code));\n        this.setMessage(\"error\", this.mapAuthCodeToMessage(error.code));\n        return;\n      });\n      runInAction(() => {\n        this.loading = false;\n      });\n    } catch (error) {\n      this.setError(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  }\n  async createProfile(data, resUser, actionCodeSettings) {\n    const headers = {\n      accept: \"application/json\",\n      Authorization: `Bearer ${this.token}`,\n      \"Content-Type\": \"application/json\"\n    };\n    this.setSubmitting(true);\n    axios.post(`${BaseDirectories.API_BASE_URL}/users/create-profile`, data, {\n      headers\n    }).then(res => {\n      if (!res.data.error) {\n        toast.success(\"Profile created successfully\", {\n          autoClose: 2000\n        });\n        this.sendVerificationMail(resUser, actionCodeSettings);\n        this.setMessage(\"success\", \"Profile created successfully\");\n        this.setToLocalStorage(\"user\", res.data);\n        setTimeout(() => {\n          this.setMessage(\"\", \"\");\n        }, 3000);\n      } else {\n        this.deleteUser();\n        toast.error(`${res.data.message}`);\n      }\n      this.setSubmitting(false);\n    }).catch(err => {\n      this.deleteUser();\n      toast.error(`${err.response.data.message}, ${err.response.data.statusCode}`);\n      this.setMessage(\"error\", err.response.data.message);\n      setTimeout(() => {\n        this.setMessage(\"\", \"\");\n      }, 4000);\n      this.setSubmitting(false);\n    });\n  }\n  setUserNotAuthenticated() {\n    this.authenticated = false;\n    this.token = \"\";\n    this.error = \"Sign up failed\";\n    this.setLoading(false);\n    this.clearFromLocalStorage();\n  }\n  setUserAuthenticated(res) {\n    this.authenticated = true;\n    this.token = res.access_token;\n    this.success = \"Sign up successful\";\n    this.setLoading(false);\n    this.setToLocalStorage(\"accessToken\", this.token);\n    this.setToLocalStorage(\"uid\", this.userId);\n  }\n}","map":{"version":3,"names":["createUserWithEmailAndPassword","sendEmailVerification","updateProfile","applyActionCode","configure","makeAutoObservable","runInAction","auth","toast","axios","BaseDirectories","enforceActions","AuthStore","constructor","authenticated","loading","submitting","error","success","verified","token","sessionStorage","getItem","userId","user","currentUser","message","type","msg","mapAuthCodeToMessage","authCode","setError","err","setSuccess","res","setMessage","setSubmitting","val","setUser","setLoading","SetAccessToken","setToLocalStorage","key","value","window","setItem","JSON","stringify","clearFromLocalStorage","clear","autoBind","isAuthenticated","isVerified","CreateUser","details","_auth$currentUser","email","password","displayName","firstName","lastName","actionCodeSettings","url","BASE_URL","handleCodeInApp","getIdToken","createProfile","sendVerificationMail","then","catch","deleteUser","delete","VerifyEmail","actionCode","code","data","resUser","headers","accept","Authorization","post","API_BASE_URL","autoClose","setTimeout","response","statusCode","setUserNotAuthenticated","setUserAuthenticated","access_token"],"sources":["/Users/mac/Desktop/Peoples Practice/Aeroconvert-frontend/src/mobx stores/AuthStore.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  createUserWithEmailAndPassword,\n  sendEmailVerification,\n  updateProfile,\n  applyActionCode,\n} from \"firebase/auth\";\nimport { configure, makeAutoObservable, runInAction } from \"mobx\";\nimport { auth } from \"../firebase/firebase\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport BaseDirectories from \"../base directories/BaseDirectories\";\n\nconfigure({ enforceActions: \"always\" });\n\nexport class AuthStore {\n  authenticated = false;\n  loading = false;\n  submitting = false;\n  error = \"\";\n  success = \"\";\n  verified = false;\n  token: any = sessionStorage.getItem(\"accessToken\") || \"\";\n  userId = \"\";\n  user: any = auth.currentUser;\n  message = {\n    type: \"\",\n    msg: \"\",\n  };\n\n  constructor() {\n    makeAutoObservable(this, {}, { autoBind: true });\n  }\n\n  isAuthenticated() {\n    return this.authenticated;\n  }\n\n  isVerified() {\n    return this.isVerified;\n  }\n\n  async CreateUser(details: any) {\n    this.setLoading(true);\n    this.setSubmitting(true);\n\n    try {\n      const res: any = await createUserWithEmailAndPassword(\n        auth,\n        details.email,\n        details.password\n      );\n      if (res.user) {\n        // this.logger.info(`User | Sign Up | ${details.email}`, res);\n        updateProfile(res.user, {\n          displayName: details.firstName + \" \" + details.lastName,\n        });\n      }\n      const actionCodeSettings = {\n        url: `${BaseDirectories.BASE_URL}/dashboard/overview/?email=${auth.currentUser?.email}`,\n        handleCodeInApp: true,\n      };\n      //create profile in backend\n      const user: any = auth.currentUser;\n      const token = await user.getIdToken();\n\n      if (token) {\n        this.SetAccessToken(token);\n        this.createProfile(details, res.user, actionCodeSettings);\n      }\n\n      this.setSuccess(res);\n      this.setLoading(false);\n      this.setSubmitting(false);\n      runInAction(() => {\n        this.loading = false;\n      });\n    } catch (error: any) {\n      this.setError(error);\n      this.setLoading(false);\n      this.setSubmitting(false);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  }\n\n  async sendVerificationMail(user: any, actionCodeSettings: any) {\n    await sendEmailVerification(user, actionCodeSettings)\n      .then((res: any) => {\n        return;\n      })\n      .catch((error: any) => {\n        return;\n      });\n  }\n\n  async deleteUser() {\n    const user: any = auth.currentUser;\n    user\n      .delete()\n      .then(() => {\n        return;\n      })\n      .catch((error: any) => {\n        return;\n      });\n  }\n\n  async VerifyEmail(actionCode: any) {\n    this.setLoading(true);\n    try {\n      await applyActionCode(auth, actionCode)\n        .then(() => {\n          toast.success(\"Email verified successfully.\");\n          this.setMessage(\"success\", \"Email verified successfully.\");\n          return;\n        })\n\n        .catch((error) => {\n          toast.error(this.mapAuthCodeToMessage(error.code));\n          this.setMessage(\"error\", this.mapAuthCodeToMessage(error.code));\n          return;\n        });\n\n      runInAction(() => {\n        this.loading = false;\n      });\n    } catch (error: any) {\n      this.setError(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  }\n\n  async createProfile(data: any, resUser: any, actionCodeSettings: any) {\n    const headers = {\n      accept: \"application/json\",\n      Authorization: `Bearer ${this.token}`,\n      \"Content-Type\": \"application/json\",\n    };\n    this.setSubmitting(true);\n    axios\n      .post(`${BaseDirectories.API_BASE_URL}/users/create-profile`, data, {\n        headers,\n      })\n      .then((res: any) => {\n        if (!res.data.error) {\n          toast.success(\"Profile created successfully\", { autoClose: 2000 });\n          this.sendVerificationMail(resUser, actionCodeSettings);\n          this.setMessage(\"success\", \"Profile created successfully\");\n          this.setToLocalStorage(\"user\", res.data);\n          setTimeout(() => {\n            this.setMessage(\"\", \"\");\n          }, 3000);\n        } else {\n          this.deleteUser();\n          toast.error(`${res.data.message}`);\n        }\n        this.setSubmitting(false);\n      })\n      .catch((err) => {\n        this.deleteUser();\n        toast.error(\n          `${err.response.data.message}, ${err.response.data.statusCode}`\n        );\n        this.setMessage(\"error\", err.response.data.message);\n        setTimeout(() => {\n          this.setMessage(\"\", \"\");\n        }, 4000);\n        this.setSubmitting(false);\n      });\n  }\n\n  mapAuthCodeToMessage = (authCode: string) => {\n    switch (authCode) {\n      case \"auth/invalid-password\":\n        return \"Current password provided is not correct.\";\n\n      case \"auth/wrong-password\":\n        return \"Current password provided is not correct.\";\n\n      case \"auth/too-many-requests\":\n        return \"Too many tries, please try again later.\";\n\n      default:\n        return \"Something went wrong, please try again later.\";\n    }\n  };\n\n  setError = (err: string) => {\n    this.error = err;\n  };\n  setSuccess = (res: string) => {\n    this.success = res;\n  };\n\n  setMessage = (type: string, msg: string) => {\n    this.message.type = type;\n    this.message.msg = msg;\n  };\n\n  setSubmitting = (val: boolean) => {\n    this.submitting = val;\n  };\n\n  setUserNotAuthenticated() {\n    this.authenticated = false;\n    this.token = \"\";\n    this.error = \"Sign up failed\";\n    this.setLoading(false);\n    this.clearFromLocalStorage();\n  }\n\n  setUser = (res: any) => {\n    this.user = res;\n  };\n\n  setLoading = (val: boolean) => {\n    this.loading = val;\n  };\n\n  SetAccessToken = (token: string) => {\n    this.token = token || sessionStorage.getItem(\"accessToken\");\n  };\n\n  setToLocalStorage = (key: string, value: any) => {\n    window.sessionStorage.setItem(key, JSON.stringify(value));\n  };\n\n  clearFromLocalStorage = () => {\n    window.sessionStorage.clear();\n  };\n\n  setUserAuthenticated(res: any) {\n    this.authenticated = true;\n    this.token = res.access_token;\n    this.success = \"Sign up successful\";\n    this.setLoading(false);\n    this.setToLocalStorage(\"accessToken\", this.token);\n    this.setToLocalStorage(\"uid\", this.userId);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}