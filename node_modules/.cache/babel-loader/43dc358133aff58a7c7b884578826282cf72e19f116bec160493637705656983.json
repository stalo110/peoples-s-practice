{"ast":null,"code":"import axios from \"axios\";\nimport { configure, makeAutoObservable, runInAction } from \"mobx\";\nimport BaseDirectories from \"../base directories/BaseDirectories\";\nconfigure({\n  enforceActions: \"always\"\n});\n// eslint-disable-next-line @typescript-eslint/no-var-requires\n\nexport class ProfileStore {\n  constructor() {\n    this.loadingData = true;\n    this.submitting = false;\n    this.error = \"\";\n    this.success = \"\";\n    this.userId = \"\";\n    this.profile = {};\n    this.token = sessionStorage.getItem(\"accessToken\") || \"\";\n    this.message = {\n      type: \"\",\n      msg: \"\"\n    };\n    this.userProfile = void 0;\n    this.setMessage = (type, msg) => {\n      this.message.type = type;\n      this.message.msg = msg;\n    };\n    this.setSubmitting = val => {\n      this.submitting = val;\n    };\n    this.setLoading = val => {\n      this.loadingData = val;\n    };\n    this.setProfile = res => {\n      this.profile = res;\n\n      // this.logger.info(`User | Get Profile | ${res.email}`, res);\n    };\n    this.setError = err => {\n      this.error = err;\n    };\n    this.setSuccess = msg => {\n      this.success = msg;\n      // this.success_setting = msg;\n    };\n    this.setToLocalStorage = (key, value) => {\n      window.sessionStorage.setItem(key, JSON.stringify(value));\n    };\n    this.SetAccessToken = token => {\n      this.token = token || sessionStorage.getItem(\"accessToken\");\n    };\n    makeAutoObservable(this);\n    runInAction(() => {\n      //   this.logger = new BrowserLogger(this.constructor.name);\n      this.userProfile = JSON.parse(sessionStorage.getItem(\"user\") || \"{}\");\n    });\n  }\n  getProfile() {\n    const headers = {\n      accept: \"application/json\",\n      Authorization: `Bearer ${this.token}`,\n      \"Content-Type\": \"application/json\"\n    };\n    this.setLoading(true);\n    axios.get(`${BaseDirectories.API_BASE_URL}/users/get-profile`, {\n      headers\n    }).then(res => {\n      this.setProfile(res.data);\n      this.setToLocalStorage(\"user\", res.data);\n      runInAction(() => this.userId = res.data._id);\n      if (res) {\n        this.setToLocalStorage(\"isRegistered\", true);\n      }\n    }).catch(err => {}).finally(() => {\n      this.setLoading(false);\n    });\n  }\n}","map":{"version":3,"names":["axios","configure","makeAutoObservable","runInAction","BaseDirectories","enforceActions","ProfileStore","constructor","loadingData","submitting","error","success","userId","profile","token","sessionStorage","getItem","message","type","msg","userProfile","setMessage","setSubmitting","val","setLoading","setProfile","res","setError","err","setSuccess","setToLocalStorage","key","value","window","setItem","JSON","stringify","SetAccessToken","parse","getProfile","headers","accept","Authorization","get","API_BASE_URL","then","data","_id","catch","finally"],"sources":["/Users/mac/Desktop/Peoples Practice/Aeroconvert-frontend/src/mobx stores/ProfileStore.ts"],"sourcesContent":["import axios from \"axios\";\nimport { configure, makeAutoObservable, runInAction } from \"mobx\";\nimport BaseDirectories from \"../base directories/BaseDirectories\";\nimport { toast } from \"react-toastify\";\nconfigure({ enforceActions: \"always\" });\n// eslint-disable-next-line @typescript-eslint/no-var-requires\n\ntype Profile = {\n  [key: string]: any;\n};\n\nexport class ProfileStore {\n  loadingData = true;\n  submitting = false;\n  error = \"\";\n  success = \"\";\n  userId = \"\";\n  profile: Profile = {};\n  token: any = sessionStorage.getItem(\"accessToken\") || \"\";\n  message = {\n    type: \"\",\n    msg: \"\",\n  };\n\n  private userProfile!: Profile;\n  constructor() {\n    makeAutoObservable(this);\n    runInAction(() => {\n      //   this.logger = new BrowserLogger(this.constructor.name);\n      this.userProfile = JSON.parse(\n        sessionStorage.getItem(\"user\") || \"{}\"\n      ) as Profile;\n    });\n  }\n\n  getProfile() {\n    const headers = {\n      accept: \"application/json\",\n      Authorization: `Bearer ${this.token}`,\n      \"Content-Type\": \"application/json\",\n    };\n\n    this.setLoading(true);\n    axios\n      .get(`${BaseDirectories.API_BASE_URL}/users/get-profile`, {\n        headers,\n      })\n      .then((res: any) => {\n        this.setProfile(res.data);\n        this.setToLocalStorage(\"user\", res.data);\n        runInAction(() => (this.userId = res.data._id));\n        if (res) {\n          this.setToLocalStorage(\"isRegistered\", true);\n        }\n      })\n      .catch((err) => {})\n      .finally(() => {\n        this.setLoading(false);\n      });\n  }\n\n  setMessage = (type: string, msg: string) => {\n    this.message.type = type;\n    this.message.msg = msg;\n  };\n\n  setSubmitting = (val: boolean) => {\n    this.submitting = val;\n  };\n\n  setLoading = (val: boolean) => {\n    this.loadingData = val;\n  };\n  setProfile = (res: any) => {\n    this.profile = res;\n\n    // this.logger.info(`User | Get Profile | ${res.email}`, res);\n  };\n\n  setError = (err: string) => {\n    this.error = err;\n  };\n\n  setSuccess = (msg: string) => {\n    this.success = msg;\n    // this.success_setting = msg;\n  };\n\n  setToLocalStorage = (key: string, value: any) => {\n    window.sessionStorage.setItem(key, JSON.stringify(value));\n  };\n\n  SetAccessToken = (token: string) => {\n    this.token = token || sessionStorage.getItem(\"accessToken\");\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}