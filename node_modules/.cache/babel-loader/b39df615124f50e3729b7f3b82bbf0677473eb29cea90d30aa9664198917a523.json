{"ast":null,"code":"'use client';\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Children, cloneElement, useMemo, useState } from 'react';\nimport { HiChevronDown } from 'react-icons/hi';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { getTheme } from '../../theme-store';\nimport { AccordionContent } from './AccordionContent';\nimport { AccordionPanel } from './AccordionPanel';\nimport { AccordionTitle } from './AccordionTitle';\nconst AccordionComponent = _ref => {\n  let {\n    alwaysOpen = false,\n    arrowIcon = HiChevronDown,\n    children,\n    flush = false,\n    collapseAll = false,\n    className,\n    theme: customTheme = {},\n    ...props\n  } = _ref;\n  const [isOpen, setOpen] = useState(collapseAll ? -1 : 0);\n  const panels = useMemo(() => Children.map(children, (child, i) => cloneElement(child, {\n    alwaysOpen,\n    arrowIcon,\n    flush,\n    isOpen: isOpen === i,\n    setOpen: () => setOpen(isOpen === i ? -1 : i)\n  })), [alwaysOpen, arrowIcon, children, flush, isOpen]);\n  const theme = mergeDeep(getTheme().accordion.root, customTheme);\n  return _jsx(\"div\", {\n    className: twMerge(theme.base, theme.flush[flush ? 'on' : 'off'], className),\n    \"data-testid\": \"flowbite-accordion\",\n    ...props,\n    children: panels\n  });\n};\nAccordionComponent.displayName = 'Accordion';\nAccordionPanel.displayName = 'Accordion.Panel';\nAccordionTitle.displayName = 'Accordion.Title';\nAccordionContent.displayName = 'Accordion.Content';\nexport const Accordion = Object.assign(AccordionComponent, {\n  Panel: AccordionPanel,\n  Title: AccordionTitle,\n  Content: AccordionContent\n});","map":{"version":3,"names":["jsx","_jsx","Children","cloneElement","useMemo","useState","HiChevronDown","twMerge","mergeDeep","getTheme","AccordionContent","AccordionPanel","AccordionTitle","AccordionComponent","_ref","alwaysOpen","arrowIcon","children","flush","collapseAll","className","theme","customTheme","props","isOpen","setOpen","panels","map","child","i","accordion","root","base","displayName","Accordion","Object","assign","Panel","Title","Content"],"sources":["/Users/mac/Desktop/Peoples Practice/Aeroconvert-frontend/node_modules/flowbite-react/lib/esm/components/Accordion/Accordion.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Children, cloneElement, useMemo, useState } from 'react';\nimport { HiChevronDown } from 'react-icons/hi';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { getTheme } from '../../theme-store';\nimport { AccordionContent } from './AccordionContent';\nimport { AccordionPanel } from './AccordionPanel';\nimport { AccordionTitle } from './AccordionTitle';\nconst AccordionComponent = ({ alwaysOpen = false, arrowIcon = HiChevronDown, children, flush = false, collapseAll = false, className, theme: customTheme = {}, ...props }) => {\n    const [isOpen, setOpen] = useState(collapseAll ? -1 : 0);\n    const panels = useMemo(() => Children.map(children, (child, i) => cloneElement(child, {\n        alwaysOpen,\n        arrowIcon,\n        flush,\n        isOpen: isOpen === i,\n        setOpen: () => setOpen(isOpen === i ? -1 : i),\n    })), [alwaysOpen, arrowIcon, children, flush, isOpen]);\n    const theme = mergeDeep(getTheme().accordion.root, customTheme);\n    return (_jsx(\"div\", { className: twMerge(theme.base, theme.flush[flush ? 'on' : 'off'], className), \"data-testid\": \"flowbite-accordion\", ...props, children: panels }));\n};\nAccordionComponent.displayName = 'Accordion';\nAccordionPanel.displayName = 'Accordion.Panel';\nAccordionTitle.displayName = 'Accordion.Title';\nAccordionContent.displayName = 'Accordion.Content';\nexport const Accordion = Object.assign(AccordionComponent, {\n    Panel: AccordionPanel,\n    Title: AccordionTitle,\n    Content: AccordionContent,\n});\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,QAAQ,EAAEC,YAAY,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACjE,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,MAAMC,kBAAkB,GAAGC,IAAA,IAAmJ;EAAA,IAAlJ;IAAEC,UAAU,GAAG,KAAK;IAAEC,SAAS,GAAGV,aAAa;IAAEW,QAAQ;IAAEC,KAAK,GAAG,KAAK;IAAEC,WAAW,GAAG,KAAK;IAAEC,SAAS;IAAEC,KAAK,EAAEC,WAAW,GAAG,CAAC,CAAC;IAAE,GAAGC;EAAM,CAAC,GAAAT,IAAA;EACrK,MAAM,CAACU,MAAM,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAACc,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACxD,MAAMO,MAAM,GAAGtB,OAAO,CAAC,MAAMF,QAAQ,CAACyB,GAAG,CAACV,QAAQ,EAAE,CAACW,KAAK,EAAEC,CAAC,KAAK1B,YAAY,CAACyB,KAAK,EAAE;IAClFb,UAAU;IACVC,SAAS;IACTE,KAAK;IACLM,MAAM,EAAEA,MAAM,KAAKK,CAAC;IACpBJ,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACD,MAAM,KAAKK,CAAC,GAAG,CAAC,CAAC,GAAGA,CAAC;EAChD,CAAC,CAAC,CAAC,EAAE,CAACd,UAAU,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEM,MAAM,CAAC,CAAC;EACtD,MAAMH,KAAK,GAAGb,SAAS,CAACC,QAAQ,CAAC,CAAC,CAACqB,SAAS,CAACC,IAAI,EAAET,WAAW,CAAC;EAC/D,OAAQrB,IAAI,CAAC,KAAK,EAAE;IAAEmB,SAAS,EAAEb,OAAO,CAACc,KAAK,CAACW,IAAI,EAAEX,KAAK,CAACH,KAAK,CAACA,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC,EAAEE,SAAS,CAAC;IAAE,aAAa,EAAE,oBAAoB;IAAE,GAAGG,KAAK;IAAEN,QAAQ,EAAES;EAAO,CAAC,CAAC;AAC1K,CAAC;AACDb,kBAAkB,CAACoB,WAAW,GAAG,WAAW;AAC5CtB,cAAc,CAACsB,WAAW,GAAG,iBAAiB;AAC9CrB,cAAc,CAACqB,WAAW,GAAG,iBAAiB;AAC9CvB,gBAAgB,CAACuB,WAAW,GAAG,mBAAmB;AAClD,OAAO,MAAMC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACvB,kBAAkB,EAAE;EACvDwB,KAAK,EAAE1B,cAAc;EACrB2B,KAAK,EAAE1B,cAAc;EACrB2B,OAAO,EAAE7B;AACb,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}