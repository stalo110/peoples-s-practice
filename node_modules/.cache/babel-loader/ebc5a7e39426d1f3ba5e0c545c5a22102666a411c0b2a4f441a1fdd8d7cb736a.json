{"ast":null,"code":"'use client';\n\nimport { useEffect } from 'react';\n/**\n * Triggers `onChange` when another browser tab instance mutates the LS value.\n */\nexport const useWatchLocalStorageValue = _ref => {\n  let {\n    key: watchKey,\n    onChange\n  } = _ref;\n  function handleStorageChange(_ref2) {\n    let {\n      key,\n      newValue\n    } = _ref2;\n    if (key === watchKey) onChange(newValue);\n  }\n  useEffect(() => {\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []); // eslint-disable-line\n};","map":{"version":3,"names":["useEffect","useWatchLocalStorageValue","_ref","key","watchKey","onChange","handleStorageChange","_ref2","newValue","window","addEventListener","removeEventListener"],"sources":["/Users/mac/Desktop/Peoples Practice/Aeroconvert-frontend/node_modules/flowbite-react/lib/esm/hooks/use-watch-localstorage-value.js"],"sourcesContent":["'use client';\nimport { useEffect } from 'react';\n/**\n * Triggers `onChange` when another browser tab instance mutates the LS value.\n */\nexport const useWatchLocalStorageValue = ({ key: watchKey, onChange, }) => {\n    function handleStorageChange({ key, newValue }) {\n        if (key === watchKey)\n            onChange(newValue);\n    }\n    useEffect(() => {\n        window.addEventListener('storage', handleStorageChange);\n        return () => window.removeEventListener('storage', handleStorageChange);\n    }, []); // eslint-disable-line\n};\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA,OAAO,MAAMC,yBAAyB,GAAGC,IAAA,IAAkC;EAAA,IAAjC;IAAEC,GAAG,EAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAAH,IAAA;EAClE,SAASI,mBAAmBA,CAAAC,KAAA,EAAoB;IAAA,IAAnB;MAAEJ,GAAG;MAAEK;IAAS,CAAC,GAAAD,KAAA;IAC1C,IAAIJ,GAAG,KAAKC,QAAQ,EAChBC,QAAQ,CAACG,QAAQ,CAAC;EAC1B;EACAR,SAAS,CAAC,MAAM;IACZS,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,mBAAmB,CAAC;IACvD,OAAO,MAAMG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEL,mBAAmB,CAAC;EAC3E,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACZ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}