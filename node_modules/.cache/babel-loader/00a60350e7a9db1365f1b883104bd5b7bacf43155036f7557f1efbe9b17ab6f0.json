{"ast":null,"code":"import{createContext}from'react';import{AuthStore}from'./AuthStore';import{ProfileStore}from'./ProfileStore';import{WalletStore}from'./WalletStore';const authStore=new AuthStore();const profileStore=new ProfileStore();const walletStore=new WalletStore();export const StoreContext=/*#__PURE__*/createContext({authStore,profileStore,walletStore});export const SetAllAccessTokens=token=>{authStore.SetAccessToken(token);profileStore.SetAccessToken(token);walletStore.SetAccessToken(token);};","map":{"version":3,"names":["createContext","AuthStore","ProfileStore","WalletStore","authStore","profileStore","walletStore","StoreContext","SetAllAccessTokens","token","SetAccessToken"],"sources":["/Users/mac/Desktop/Peoples Practice/Aeroconvert-frontend/src/mobx stores/RootStore.ts"],"sourcesContent":["import { createContext } from 'react';\nimport { AuthStore } from './AuthStore';\nimport { ProfileStore } from './ProfileStore';\nimport { WalletStore } from './WalletStore';\n\ninterface StoreContextInterface {\n  authStore: AuthStore;\n  profileStore: ProfileStore;\n  walletStore: WalletStore;\n}\n\nconst authStore = new AuthStore();\nconst profileStore = new ProfileStore();\nconst walletStore = new WalletStore();\n\nexport const StoreContext = createContext<StoreContextInterface>({\n  authStore,\n  profileStore,\n  walletStore,\n});\n\nexport const SetAllAccessTokens = (token: string) => {\n  authStore.SetAccessToken(token);\n  profileStore.SetAccessToken(token);\n  walletStore.SetAccessToken(token);\n};\n"],"mappings":"AAAA,OAASA,aAAa,KAAQ,OAAO,CACrC,OAASC,SAAS,KAAQ,aAAa,CACvC,OAASC,YAAY,KAAQ,gBAAgB,CAC7C,OAASC,WAAW,KAAQ,eAAe,CAQ3C,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAH,SAAS,CAAC,CAAC,CACjC,KAAM,CAAAI,YAAY,CAAG,GAAI,CAAAH,YAAY,CAAC,CAAC,CACvC,KAAM,CAAAI,WAAW,CAAG,GAAI,CAAAH,WAAW,CAAC,CAAC,CAErC,MAAO,MAAM,CAAAI,YAAY,cAAGP,aAAa,CAAwB,CAC/DI,SAAS,CACTC,YAAY,CACZC,WACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAE,kBAAkB,CAAIC,KAAa,EAAK,CACnDL,SAAS,CAACM,cAAc,CAACD,KAAK,CAAC,CAC/BJ,YAAY,CAACK,cAAc,CAACD,KAAK,CAAC,CAClCH,WAAW,CAACI,cAAc,CAACD,KAAK,CAAC,CACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}